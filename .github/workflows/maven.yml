name: Java CI with Maven and Platform Executables

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release v1.0.${{ github.run_number }}"
          draft: false
          prerelease: false

  build-jar:
    needs: create-release
    runs-on: ubuntu-latest
    name: Build JAR

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        run: mvn clean test -B -Dstyle.color=always -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Build with Maven
        run: |
          mvn -B package -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/demo1-1.0-SNAPSHOT-shaded.jar
          asset_name: demo1-1.0-SNAPSHOT-shaded.jar
          asset_content_type: application/java-archive

  package-macos:
    needs: create-release
    runs-on: macos-latest
    name: Package macOS Executable

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Package with jpackage (macOS)
        run: |
          jpackage --input target --name MyApp --main-jar demo1-1.0-SNAPSHOT-shaded.jar --type dmg --dest output

      - name: Upload macOS Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: output/MyApp-1.0.dmg
          asset_name: MyApp-1.0-macOS.dmg
          asset_content_type: application/x-apple-diskimage

  package-windows:
    needs: create-release
    runs-on: windows-latest
    name: Package Windows Executable

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Package with jpackage (Windows)
        run: |
          jpackage --input target --name MyApp --main-jar demo1-1.0-SNAPSHOT-shaded.jar --type exe --dest output

      - name: Upload Windows Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: output/MyApp.exe
          asset_name: MyApp-1.0-Windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
